{"version":3,"file":"static/js/130.5ec95ce5.chunk.js","mappings":"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","sources":["faq/Faq.jsx","pages/services/Services.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport \"./faq.scss\";\r\n\r\nfunction Faq({ faqData }) {\r\n  const [opened, setOpend] = useState(null);\r\n  const answerRef = useRef(null);\r\n  const handleClick = (index) => {\r\n    if (index == opened) {\r\n      setOpend(null);\r\n    } else {\r\n      setOpend(index);\r\n    }\r\n  };\r\n  const getAnswerMaxHeight = (index) => {\r\n    return index === opened ? answerRef?.current.scrollHeight + \"px\" : \"0\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"faqs_cont\">\r\n      <h3>F.A.Q</h3>\r\n      <div className=\"faqs_content\">\r\n        {faqData?.map((item, index) => {\r\n          return (\r\n            <div className=\"faq\" key={index}>\r\n              <div className=\"plus\" onClick={() => handleClick(index)}>\r\n                <div className=\"horizontal\"></div>\r\n                <div\r\n                  className={`vertical ${index == opened && \"vertical_opened\"}`}\r\n                ></div>\r\n              </div>\r\n              <div className=\"faq_text\">\r\n                <h4>{item.question}</h4>\r\n                <p\r\n                  className={`faq_answer ${index == opened && \"margin_top\"}`}\r\n                  ref={answerRef}\r\n                  style={{ maxHeight: getAnswerMaxHeight(index) }}\r\n                >\r\n                  {item.answer}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Faq;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./services.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BaseURL, scrollTP } from \"../home/Home\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport LoadnigMain from \"../../loading/LoadnigMain\";\r\nimport Faq from \"../../faq/Faq\";\r\nimport Testimonials from \"../../testimonials/Testimonials\";\r\nconst Services = () => {\r\n  const [services, setServices] = useState(null);\r\n  const [faqData, setFaqData] = useState(null);\r\n  const [testimonials, setTestimonials] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(`${BaseURL}/service/list/`);\r\n        setServices(res.data.services);\r\n        setFaqData(res.data.faqs);\r\n        setTestimonials(res.data.testimonial);\r\n        setIsLoading(false);\r\n        scrollTP();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n    const scroll = () => {\r\n      window.scrollTo(0, 0);\r\n    };\r\n    scroll();\r\n  }, []);\r\n  const [hoverService, setHoverService] = useState(null);\r\n  const { ref: serviceRef, inView: serviceView } = useInView();\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <LoadnigMain />\r\n      ) : (\r\n        <div className=\"services_cont\">\r\n          <h2>SERVICES</h2>\r\n          <div className=\"home_service_cont\" ref={serviceRef}>\r\n            {services?.map((item, index) => (\r\n              <Link\r\n                target=\"_blank\"\r\n                to={`/services/${item.slug}`}\r\n                key={index}\r\n                className={`hoem_service_item ${\r\n                  serviceView && `service_animation_${index} `\r\n                }`}\r\n                onMouseEnter={() => setHoverService(index)}\r\n                onMouseLeave={() => setHoverService(null)}\r\n              >\r\n                <h3\r\n                  className={`home_service_title ${\r\n                    hoverService == index && \"home_service_title_active\"\r\n                  } `}\r\n                >\r\n                  {item.title}\r\n                </h3>\r\n                <img src={item.image} alt=\"\" />\r\n                <div\r\n                  className={`service_bacgound ${\r\n                    hoverService == index && \"opacity_1\"\r\n                  } `}\r\n                ></div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n          <Faq faqData={faqData} />\r\n          <Testimonials testimonials={testimonials} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n"],"names":["_ref","faqData","_useState","useState","_useState2","_slicedToArray","opened","setOpend","answerRef","useRef","getAnswerMaxHeight","index","current","scrollHeight","_jsxs","className","children","_jsx","map","item","onClick","handleClick","concat","question","ref","style","maxHeight","answer","services","setServices","_useState3","_useState4","setFaqData","_useState5","_useState6","testimonials","setTestimonials","_useState7","_useState8","isLoading","setIsLoading","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","BaseURL","sent","data","faqs","testimonial","scrollTP","t0","console","log","stop","apply","arguments","window","scrollTo","_useState9","_useState10","hoverService","setHoverService","_useInView","useInView","serviceRef","serviceView","inView","_Fragment","LoadnigMain","Link","target","to","slug","onMouseEnter","onMouseLeave","title","src","image","alt","Faq","Testimonials"],"sourceRoot":""}